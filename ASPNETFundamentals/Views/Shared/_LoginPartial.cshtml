@using Microsoft.AspNetCore.Identity
@using ASPNETFundamentals.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Log out</button>
            </li>
            @if (UserManager.IsInRoleAsync(UserManager.GetUserAsync(User).Result, "Admin").Result)
            {
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" asp-area="admin" asp-controller="Home" asp-action="Index" title="Admin">Administration
                        <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li><a asp-area="admin" asp-controller="Users" asp-action="Index" title="Admin">Users</a></li>
                        <li><a asp-area="admin" asp-controller="Roles" asp-action="Index" title="Admin">Roles</a></li>
                        <li><a asp-area="admin" asp-controller="Permissions" asp-action="Index" title="Admin">Permissions</a></li>
                    </ul>
                    
                </li>
            }
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="" asp-controller="Account" asp-action="Register">Register</a></li>
        <li><a asp-area="" asp-controller="Account" asp-action="Login">Log in</a></li>
    </ul>
}
